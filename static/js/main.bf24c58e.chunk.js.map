{"version":3,"sources":["Form.js","RepoList.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Form1","props","Container","id","Form","onSubmit","e","preventDefault","setUsername","target","value","Group","Control","type","placeholder","disabled","isFetching","Button","variant","axios","require","RepoList","sortedKeys","setIsFetching","username","setError","repoList","setRepoList","repoListRef","setIsValidUser","isValidUserRef","useEffect","a","get","userRes","status","isAxiosError","console","log","current","response","data","length","forEach","repo","language","key","languages_url","res","Object","keys","includes","push","name","description","url","html_url","fetchData","sort","b","map","lang","index","i","to","style","textAlign","Home","useState","error","isValidUser","App","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf24c58e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button, Container, Form} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Form1 = (props) => {\r\n\r\n    const onSubmit = function (e) {\r\n        e.preventDefault()\r\n        props.setUsername(e.target[0].value)\r\n    }\r\n\r\n    \r\n    return (\r\n        <Container id='formContainer' >\r\n            <Form id=\"gitHubForm\" onSubmit = { e => onSubmit(e) }>\r\n                <Form.Group id=\"form\">\r\n                <Form.Control \r\n                type=\"text\" \r\n                placeholder=\"Enter GitHub Username\" \r\n                id='usernameInput' \r\n                disabled = {props.isFetching}\r\n                />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"dark\" type=\"submit\" id=\"submitButton\" disabled={props.isFetching}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    ); \r\n\r\n}\r\n \r\nexport default Form1;","import Container from 'react-bootstrap/Container';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useEffect } from 'react';\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst RepoList = ({\r\n        setIsFetching,\r\n        username,\r\n        setError,\r\n        repoList,\r\n        setRepoList,\r\n        repoListRef,\r\n        setIsValidUser,\r\n        isValidUserRef\r\n    \r\n    }) => { \r\n\r\n\r\n    useEffect(() => {\r\n        setError(false)\r\n        const fetchData = async () => {\r\n            try {\r\n                setIsFetching(true)\r\n                const userRes = await axios.get(`https://api.github.com/users/${username}`)\r\n                setIsFetching(false)\r\n                if(userRes.status===200){\r\n                    // console.log('in')\r\n                    setIsValidUser(true)    \r\n                }\r\n                //console.log(userRes.data)\r\n            }\r\n            catch (e) {\r\n                if(e.isAxiosError===true){\r\n                    console.log('e')\r\n                    //console.log(e.response.data.message)\r\n                    setError('invalid username')\r\n                    setIsValidUser(false)\r\n                }\r\n                setIsFetching(false)\r\n            }\r\n\r\n            \r\n\r\n            if(isValidUserRef.current){\r\n                try{\r\n                    setIsFetching(true)\r\n                    const response = await axios.get(`https://api.github.com/users/${username}/repos`,)\r\n                    //console.log(response.data)\r\n                    \r\n                    if(response.data.length > 0){\r\n                        var key;\r\n                        response.data.forEach(async(repo) => {\r\n                            if(repo.language !== null){\r\n                                key = repo.language\r\n                            }\r\n                            else{\r\n                                const res = await axios.get(`${repo.languages_url}`,)\r\n                                    key = (Object.keys(res.data).length === 0) ? 'no dominant language': Object.keys(res.data)[0]\r\n                            }\r\n                            var data = {}  \r\n                            if(!Object.keys(repoListRef.current).includes(key)){\r\n                                data = {...repoListRef.current, [key]: [{name:repo.name, description: repo.description, url: repo.html_url}] }\r\n                            }\r\n                            else{\r\n                                data = {...repoListRef.current}\r\n                                data[key].push({name:repo.name, description: repo.description, url: repo.html_url})\r\n                            }\r\n                            setRepoList(data)\r\n                        }) \r\n                    }  \r\n                    else{\r\n                        setRepoList(0)\r\n                    }\r\n    \r\n                    setIsFetching(false)\r\n                        \r\n                }\r\n                catch (exception) {\r\n                    if(exception.response.status===404){\r\n                        setError('something went wrong!')\r\n                    }\r\n                    setRepoList(null)\r\n                    setIsFetching(false)\r\n                }\r\n            }\r\n        }\r\n        if(username){\r\n            fetchData()\r\n        }\r\n        return () => {\r\n            setRepoList([]); \r\n        };\r\n    }, [isValidUserRef, repoListRef, setError, setIsFetching, setIsValidUser, setRepoList, username])\r\n    \r\n\r\n    var sortedKeys\r\n    if(repoList){\r\n        sortedKeys = Object.keys(repoList).sort((a, b) => repoList[b].length - repoList[a].length)\r\n    }\r\n\r\n    return (\r\n        <Container id='repos'>\r\n\r\n            {repoList!==0 && <ol id=\"recs\" >\r\n                {sortedKeys && sortedKeys.map((lang, index) => (\r\n                    <div key = {index}>\r\n                        <li key = {index} id=\"lang\">{lang}</li>\r\n                        <div>\r\n                            <ol id='olist'>\r\n                                {repoList[lang].map((repo, i) => {\r\n                                    return <li key = {i}>\r\n                                        <p>name: {repo.name}</p>\r\n                                        <p>description: {repo.description ? repo.description: 'no description'}</p>\r\n                                        <p>url: <Link to = {repo.url}>{repo.url}</Link></p>\r\n                                    </li>\r\n                                })}\r\n                            </ol> \r\n                        </div> \r\n                    </div>\r\n                ))}\r\n            </ol>}\r\n\r\n            {repoList === 0 && <p style = {{textAlign:'center'}}>no repos</p>} \r\n        </Container>\r\n    ); \r\n\r\n}\r\n \r\nexport default RepoList;","import React from 'react'\r\nimport Form1 from './Form';\r\nimport RepoList from './RepoList';\r\nimport useState from 'react-usestateref'\r\nconst Home = () => {\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [username, setUsername] = useState('')\r\n    const [error, setError] = useState(false)\r\n    const [repoList, setRepoList, repoListRef] = useState({})\r\n    const [isValidUser, setIsValidUser, isValidUserRef] = useState(false)\r\n    let props = {\r\n        isFetching,\r\n        setIsFetching,\r\n        username,\r\n        setUsername,\r\n        error,\r\n        setError,\r\n        repoList,\r\n        setRepoList,\r\n        repoListRef,\r\n        isValidUser,\r\n        setIsValidUser,\r\n        isValidUserRef\r\n    }\r\n    return ( \r\n        <div>\r\n            <Form1 {...{username, setUsername, isFetching}}/>\r\n            {username &&  <RepoList {...props}/>}\r\n            {username && isFetching && <p style = {{textAlign:'center'}}>Loading...</p>}\r\n            {error && <p style = {{textAlign:'center'}}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","import './App.css';\nimport Home from './Home'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch> \n          <Route exact path=\"/get-repos\">\n            <Home/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}